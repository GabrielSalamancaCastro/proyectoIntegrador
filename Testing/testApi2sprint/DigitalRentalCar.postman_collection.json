{
	"info": {
		"_postman_id": "13cebd70-3252-45ea-986e-0a0554677be2",
		"name": "DigitalRentalCar",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Categorias",
			"item": [
				{
					"name": "GuardarCategoria",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Se espera status 200\", function(){\r",
									"    pm.response.to.have.status(200);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Autos Familiares\",\r\n  \"description\": \"1500 autos\",\r\n  \"imgUrl\": \"https://pictures.dealer.com/p/phillongmotorcityfordfd/0930/ab9138ab2e6faa0874ebb74b394b8260x.jpg\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/category/save",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"category",
								"save"
							]
						}
					},
					"response": []
				},
				{
					"name": "GuardarCategoriaCampoVacio",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Esperamos error 400\", function(){\r",
									"    pm.response.to.have.status(400);\r",
									"})\r",
									"\r",
									"pm.test(\"Esperamos status 200\", function(){\r",
									"    pm.response.to.have.status(200);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"\",\r\n  \"description\": \"1500 autos\",\r\n  \"imgUrl\": \"https://pictures.dealer.com/p/phillongmotorcityfordfd/0930/ab9138ab2e6faa0874ebb74b394b8260x.jpg\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/category/save",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"category",
								"save"
							]
						}
					},
					"response": []
				},
				{
					"name": "GuardarCategoriaExistente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Esperamos un conflicto\", function(){\r",
									"    pm.response.to.have.status(409)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Autos Familiares\",\r\n  \"description\": \"1500 autos\",\r\n  \"imgUrl\": \"https://pictures.dealer.com/p/phillongmotorcityfordfd/0930/ab9138ab2e6faa0874ebb74b394b8260x.jpg\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/category/save",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"category",
								"save"
							]
						}
					},
					"response": []
				},
				{
					"name": "GuardarCategoriaTipoDatoErroneo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Esperamos un error 400 por Bad request\", function(){\r",
									"    pm.response.to.have.status(400);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"categoria x\",\r\n  \"description\": true,\r\n  \"imgUrl\": 4\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/category/save",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"category",
								"save"
							]
						}
					},
					"response": []
				},
				{
					"name": "MostrarCategorias",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonResponse = pm.response.json();\r",
									"pm.test(\"Esperamos un array de objetos\", function(){\r",
									"    pm.expect(jsonResponse).to.be.an(\"array\");\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/category",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"category"
							]
						}
					},
					"response": []
				},
				{
					"name": "MostrarCategoriaID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let schema = {\r",
									"    \"id\":\"Long\",\r",
									"    \"name\":\"string\",\r",
									"    \"description\":\"string\",\r",
									"    \"imgUrl\":\"string\"\r",
									"}\r",
									"\r",
									"\r",
									"let schema2 = {\r",
									"    \"id\": String,\r",
									"    \"name\": true,\r",
									"    \"description\": \"string\",\r",
									"    \"imgUrl\":String\r",
									"}\r",
									"\r",
									"\r",
									"pm.test('Schema is valid #1', function() {\r",
									"  pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test('Schema is valid #2', function() {\r",
									"  pm.response.to.have.jsonSchema(schema2);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:8080/category/id/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"category",
								"id",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "MostrarCategoriaNoExistenteID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Esperamos un error 404\", function(){\r",
									"    pm.response.to.have.status(404);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/category/id/100",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"category",
								"id",
								"100"
							]
						}
					},
					"response": []
				},
				{
					"name": "MostrarCategoriaName",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Esperamos un status 200\", function(){\r",
									"    pm.response.to.have.status(200);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:8080/category/name/Autos De Lujo",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"category",
								"name",
								"Autos De Lujo"
							]
						}
					},
					"response": []
				},
				{
					"name": "MostrarCategoriaNoExistenteName",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Esperamos error 404\", function(){\r",
									"    pm.response.to.have.status(404);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:8080/category/name/motos",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"category",
								"name",
								"motos"
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdateCategoria",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Esperando un status 200\", function(){\r",
									"    pm.response.to.have.status(200);\r",
									"})\r",
									"\r",
									"let jsonResponse = pm.response.json();\r",
									"pm.test(\"Esperamos un objeto\", function(){\r",
									"    pm.expect(jsonResponse).to.be.an(\"object\");\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": 3,\r\n    \"name\": \"Autos Econ√≥micos\",\r\n    \"description\": \"8100 autos\",\r\n    \"imgUrl\": \"https://api.vehicleapprovalcentre.com/storage/app/uploads/public/5fa/95d/d49/5fa95dd49e835132644360.jpg\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/category/update",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"category",
								"update"
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdateCategoriaBadRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Esperando un status 400\", function(){\r",
									"    pm.response.to.have.status(400);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": 3,\r\n    \"name\": \"Autos Econ√≥micos\",\r\n    \"description\": \"8100 autos\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/category/update",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"category",
								"update"
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdateCategoriaWithOutID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Esperando un status 400\", function(){\r",
									"    pm.response.to.have.status(400);\r",
									"})\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Autos Familiares\",\r\n  \"description\": \"1500 autos\",\r\n  \"imgUrl\": \"https://pictures.dealer.com/p/phillongmotorcityfordfd/0930/ab9138ab2e6faa0874ebb74b394b8260x.jpg\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/category/update",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"category",
								"update"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteCategoriaExistente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Esperando un status 200\", function(){\r",
									"    pm.response.to.have.status(200);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/category/delete/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"category",
								"delete",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteCategoriaNoExistente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Esperando un status 404\", function(){\r",
									"    pm.response.to.have.status(404);\r",
									"})\r",
									"\r",
									"pm.test(\"Esperando un status 400\", function(){\r",
									"    pm.response.to.have.status(400);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/category/delete/100",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"category",
								"delete",
								"100"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Caracteristicas",
			"item": [
				{
					"name": "GuardarCaracteristica",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Se espera status 200\", function(){\r",
									"    pm.response.to.have.status(200);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Carro autom√°tico\",\r\n    \"icon\": \"https://buckets3-grupo1.s3.sa-east-1.amazonaws.com/icons/icon-gearbox.svg\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/characteristic/save",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"characteristic",
								"save"
							]
						}
					},
					"response": []
				},
				{
					"name": "GuardarCaracteristicaCampoVacio",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Esperamos error 400\", function(){\r",
									"    pm.response.to.have.status(400);\r",
									"})\r",
									"\r",
									"pm.test(\"Esperamos status 200\", function(){\r",
									"    pm.response.to.have.status(200);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Carro autom√°tico\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/characteristic/save",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"characteristic",
								"save"
							]
						}
					},
					"response": []
				},
				{
					"name": "GuardarCaracteristicaExistente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Esperamos un conflicto\", function(){\r",
									"    pm.response.to.have.status(409)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Carro autom√°tico\",\r\n    \"icon\": \"https://buckets3-grupo1.s3.sa-east-1.amazonaws.com/icons/icon-gearbox.svg\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/characteristic/save",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"characteristic",
								"save"
							]
						}
					},
					"response": []
				},
				{
					"name": "GuardarCaracteristicaTipoDatoErroneo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Esperamos un error 400 por Bad request\", function(){\r",
									"    pm.response.to.have.status(400);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Carro autom√°tico\",\r\n    \"icon\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/characteristic/save",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"characteristic",
								"save"
							]
						}
					},
					"response": []
				},
				{
					"name": "MostrarCaracteristicas",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonResponse = pm.response.json();\r",
									"pm.test(\"Esperamos un array de objetos\", function(){\r",
									"    pm.expect(jsonResponse).to.be.an(\"array\");\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/characteristic/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"characteristic",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "MostrarCaracteristicaID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let schema = {\r",
									"    \"id\":\"Long\",\r",
									"    \"name\":\"string\",\r",
									"    \"icon\":\"string\",\r",
									"}\r",
									"\r",
									"\r",
									"let schema2 = {\r",
									"    \"id\": String,\r",
									"    \"name\": true,\r",
									"    \"icon\": \"string\",\r",
									"}\r",
									"\r",
									"\r",
									"pm.test('Schema is valid #1', function() {\r",
									"  pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test('Schema is valid #2', function() {\r",
									"  pm.response.to.have.jsonSchema(schema2);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:8080/characteristic/id/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"characteristic",
								"id",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "MostrarCaracteristicaNoExistenteID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Esperamos un error 404\", function(){\r",
									"    pm.response.to.have.status(404);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:8080/characteristic/id/100",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"characteristic",
								"id",
								"100"
							]
						}
					},
					"response": []
				},
				{
					"name": "MostrarCaracteristicaName",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Esperamos un status 200\", function(){\r",
									"    pm.response.to.have.status(200);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:8080/characteristic/name/Vehiculo electrico",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"characteristic",
								"name",
								"Vehiculo electrico"
							]
						}
					},
					"response": []
				},
				{
					"name": "MostrarCaracteristicaNoExistenteName",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Esperamos error 404\", function(){\r",
									"    pm.response.to.have.status(404);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:8080/characteristic/name/numero de ruedas",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"characteristic",
								"name",
								"numero de ruedas"
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdateCaracteristica",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Esperando un status 200\", function(){\r",
									"    pm.response.to.have.status(200);\r",
									"})\r",
									"\r",
									"let jsonResponse = pm.response.json();\r",
									"pm.test(\"Esperamos un objeto\", function(){\r",
									"    pm.expect(jsonResponse).to.be.an(\"object\");\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": 1,\r\n    \"name\": \"N√∫mero de maletas\",\r\n    \"icon\": \"https://buckets3-grupo1.s3.sa-east-1.amazonaws.com/icons/icon-number-bags.svg\",\r\n    \"products\": []\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/characteristic/update",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"characteristic",
								"update"
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdateCaracteristicaBadRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Esperando un status 400\", function(){\r",
									"    pm.response.to.have.status(400);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": 1,\r\n    \"name\": \"N√∫mero de maletas\",\r\n    \"icon\": \"https://buckets3-grupo1.s3.sa-east-1.amazonaws.com/icons/icon-number-bags.svg\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/characteristic/update",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"characteristic",
								"update"
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdateCaracteristicaWithOutID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Esperando un status 400\", function(){\r",
									"    pm.response.to.have.status(400);\r",
									"})\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"N√∫mero de maletas\",\r\n    \"icon\": \"https://buckets3-grupo1.s3.sa-east-1.amazonaws.com/icons/icon-number-bags.svg\",\r\n    \"products\": []\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/characteristic/update",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"characteristic",
								"update"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteCaracteristicaExistente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Esperando un status 200\", function(){\r",
									"    pm.response.to.have.status(200);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/characteristic/delete/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"characteristic",
								"delete",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteCaracteristicaNoExistente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Esperando un status 404\", function(){\r",
									"    pm.response.to.have.status(404);\r",
									"})\r",
									"\r",
									"pm.test(\"Esperando un status 400\", function(){\r",
									"    pm.response.to.have.status(400);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/characteristic/delete/100",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"characteristic",
								"delete",
								"100"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Ciudades",
			"item": [
				{
					"name": "GuardarCiudad",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Se espera status 200\", function(){\r",
									"    pm.response.to.have.status(200);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Las Vegas\",\r\n    \"country\": \"Estados Unidos\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/city/save",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"city",
								"save"
							]
						}
					},
					"response": []
				},
				{
					"name": "GuardarCiudadCampoVacio",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Esperamos error 400\", function(){\r",
									"    pm.response.to.have.status(400);\r",
									"})\r",
									"\r",
									"pm.test(\"Esperamos status 200\", function(){\r",
									"    pm.response.to.have.status(200);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Las Vegas\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/city/save",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"city",
								"save"
							]
						}
					},
					"response": []
				},
				{
					"name": "GuardarCiudadExistente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Esperamos un conflicto\", function(){\r",
									"    pm.response.to.have.status(409)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Las Vegas\",\r\n    \"country\": \"Estados Unidos\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/city/save",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"city",
								"save"
							]
						}
					},
					"response": []
				},
				{
					"name": "GuardarCiudadTipoDatoErroneo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Esperamos un error 400 por Bad request\", function(){\r",
									"    pm.response.to.have.status(400);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Las Vegas\",\r\n    \"country\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/city/save",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"city",
								"save"
							]
						}
					},
					"response": []
				},
				{
					"name": "MostrarCiudades",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonResponse = pm.response.json();\r",
									"pm.test(\"Esperamos un array de objetos\", function(){\r",
									"    pm.expect(jsonResponse).to.be.an(\"array\");\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/city/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"city",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "MostrarCiudadID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let schema = {\r",
									"    \"id\":\"Long\",\r",
									"    \"name\":\"string\",\r",
									"    \"description\":\"string\",\r",
									"    \"imgUrl\":\"string\"\r",
									"}\r",
									"\r",
									"\r",
									"let schema2 = {\r",
									"    \"id\": String,\r",
									"    \"name\": true,\r",
									"    \"description\": \"string\",\r",
									"    \"imgUrl\":String\r",
									"}\r",
									"\r",
									"\r",
									"pm.test('Schema is valid #1', function() {\r",
									"  pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test('Schema is valid #2', function() {\r",
									"  pm.response.to.have.jsonSchema(schema2);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:8080/city/id/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"city",
								"id",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "MostrarCiudadNoExistenteID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Esperamos un error 404\", function(){\r",
									"    pm.response.to.have.status(404);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/city/id/100",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"city",
								"id",
								"100"
							]
						}
					},
					"response": []
				},
				{
					"name": "MostrarCiudadName",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Esperamos un status 200\", function(){\r",
									"    pm.response.to.have.status(200);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:8080/city/name/San Francisco",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"city",
								"name",
								"San Francisco"
							]
						}
					},
					"response": []
				},
				{
					"name": "MostrarCiudadNoExistenteName",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Esperamos error 404\", function(){\r",
									"    pm.response.to.have.status(404);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:8080/city/name/Buenos Aires",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"city",
								"name",
								"Buenos Aires"
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdateCiudad",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Esperando un status 200\", function(){\r",
									"    pm.response.to.have.status(200);\r",
									"})\r",
									"\r",
									"let jsonResponse = pm.response.json();\r",
									"pm.test(\"Esperamos un objeto\", function(){\r",
									"    pm.expect(jsonResponse).to.be.an(\"object\");\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": 1,\r\n    \"name\": \"San Francisco\",\r\n    \"country\": \"Estados Unidos\",\r\n    \"products\": []\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/city/update",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"city",
								"update"
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdateCiudadBadRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Esperando un status 400\", function(){\r",
									"    pm.response.to.have.status(400);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": 1,\r\n    \"name\": \"San Francisco\",\r\n    \"country\": \"Estados Unidos\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/city/update",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"city",
								"update"
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdateCiudadWithOutID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Esperando un status 400\", function(){\r",
									"    pm.response.to.have.status(400);\r",
									"})\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"San Francisco\",\r\n    \"country\": \"Estados Unidos\",\r\n    \"products\": []\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/city/update",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"city",
								"update"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteCiudadExistente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Esperando un status 200\", function(){\r",
									"    pm.response.to.have.status(200);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/city/delete/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"city",
								"delete",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteCiudadNoExistente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Esperando un status 404\", function(){\r",
									"    pm.response.to.have.status(404);\r",
									"})\r",
									"\r",
									"pm.test(\"Esperando un status 400\", function(){\r",
									"    pm.response.to.have.status(400);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/city/delete/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"city",
								"delete",
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Im√°genes",
			"item": [
				{
					"name": "GuardarImagen",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Se espera status 200\", function(){\r",
									"    pm.response.to.have.status(200);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\":\"renault por delante\",\r\n    \"url\": \"url_renault_delante\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/image/save",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"image",
								"save"
							]
						}
					},
					"response": []
				},
				{
					"name": "GuardarImagenCampoVacio",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Esperamos error 400\", function(){\r",
									"    pm.response.to.have.status(400);\r",
									"})\r",
									"\r",
									"pm.test(\"Esperamos status 200\", function(){\r",
									"    pm.response.to.have.status(200);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\":\"renault por delante\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/image/save",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"image",
								"save"
							]
						}
					},
					"response": []
				},
				{
					"name": "GuardarImagenExistente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Esperamos un conflicto\", function(){\r",
									"    pm.response.to.have.status(409)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\":\"renault por delante\",\r\n    \"url\": \"url_renault_delante\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/image/save",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"image",
								"save"
							]
						}
					},
					"response": []
				},
				{
					"name": "GuardarImagenTipoDatoErroneo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Esperamos un error 400 por Bad request\", function(){\r",
									"    pm.response.to.have.status(400);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\":\"renault por delante\",\r\n    \"url\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/image/save",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"image",
								"save"
							]
						}
					},
					"response": []
				},
				{
					"name": "MostrarIm√°genes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonResponse = pm.response.json();\r",
									"pm.test(\"Esperamos un array de objetos\", function(){\r",
									"    pm.expect(jsonResponse).to.be.an(\"array\");\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/image/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"image",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "MostrarImagenID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let schema = {\r",
									"    \"id\":\"Long\",\r",
									"    \"name\":\"string\",\r",
									"    \"description\":\"string\",\r",
									"    \"imgUrl\":\"string\"\r",
									"}\r",
									"\r",
									"\r",
									"let schema2 = {\r",
									"    \"id\": String,\r",
									"    \"name\": true,\r",
									"    \"description\": \"string\",\r",
									"    \"imgUrl\":String\r",
									"}\r",
									"\r",
									"\r",
									"pm.test('Schema is valid #1', function() {\r",
									"  pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test('Schema is valid #2', function() {\r",
									"  pm.response.to.have.jsonSchema(schema2);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:8080/image/id/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"image",
								"id",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "MostrarImagenNoExistenteID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Esperamos un error 404\", function(){\r",
									"    pm.response.to.have.status(404);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/image/id/1000",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"image",
								"id",
								"1000"
							]
						}
					},
					"response": []
				},
				{
					"name": "MostrarImagenName",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Esperamos un status 200\", function(){\r",
									"    pm.response.to.have.status(200);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:8080/image/name/Porsche GT3R Frente",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"image",
								"name",
								"Porsche GT3R Frente"
							]
						}
					},
					"response": []
				},
				{
					"name": "MostrarImagenNoExistenteName",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Esperamos error 404\", function(){\r",
									"    pm.response.to.have.status(404);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:8080/image/name/BMW S1000RR Frente",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"image",
								"name",
								"BMW S1000RR Frente"
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdateImagen",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Esperando un status 200\", function(){\r",
									"    pm.response.to.have.status(200);\r",
									"})\r",
									"\r",
									"let jsonResponse = pm.response.json();\r",
									"pm.test(\"Esperamos un objeto\", function(){\r",
									"    pm.expect(jsonResponse).to.be.an(\"object\");\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": 1,\r\n    \"title\": \"reanult sandero\",\r\n    \"url\": \"url1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/image/update",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"image",
								"update"
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdateImagenBadRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Esperando un status 400\", function(){\r",
									"    pm.response.to.have.status(400);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": 1,\r\n    \"title\": \"reanult sandero\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/image/update",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"image",
								"update"
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdateImagenWithOutID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Esperando un status 400\", function(){\r",
									"    pm.response.to.have.status(400);\r",
									"})\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"reanult sandero\",\r\n    \"url\": \"url1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/image/update",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"image",
								"update"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteImagenExistente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Esperando un status 200\", function(){\r",
									"    pm.response.to.have.status(200);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/image/delete/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"image",
								"delete",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteImagenNoExistente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Esperando un status 404\", function(){\r",
									"    pm.response.to.have.status(404);\r",
									"})\r",
									"\r",
									"pm.test(\"Esperando un status 400\", function(){\r",
									"    pm.response.to.have.status(400);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/image/delete/100",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"image",
								"delete",
								"100"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Productos",
			"item": [
				{
					"name": "GuardarProducto",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Se espera status 200\", function(){\r",
									"    pm.response.to.have.status(200);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"Porsche 911 GT2 RS\",\r\n    \"description\":\"Un carro comodo para estar en la ciudad\",\r\n    \"characteristics\": [\r\n        {\r\n            \"id\": 1\r\n        },\r\n        {\r\n            \"id\": 2\r\n        }\r\n    ],\r\n    \"images\": [\r\n    {\r\n            \"title\": \"reanult sandero\",\r\n            \"url\": \"url1\"\r\n    },\r\n    {\r\n            \"title\": \"interior renault sandero\",\r\n            \"url\": \"url333\"\r\n    }\r\n    ],\r\n    \"city\":{\r\n        \"id\": 1\r\n    },\r\n    \"category\":{\r\n        \"id\": 1\r\n    }\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/product/save",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"product",
								"save"
							]
						}
					},
					"response": []
				},
				{
					"name": "GuardarImagenCampoVacio Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Esperamos error 400\", function(){\r",
									"    pm.response.to.have.status(400);\r",
									"})\r",
									"\r",
									"pm.test(\"Esperamos status 200\", function(){\r",
									"    pm.response.to.have.status(200);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/product/save",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"product",
								"save"
							]
						}
					},
					"response": []
				},
				{
					"name": "GuardarImagenExistente Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Esperamos un conflicto\", function(){\r",
									"    pm.response.to.have.status(409)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/product/save",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"product",
								"save"
							]
						}
					},
					"response": []
				},
				{
					"name": "GuardarImagenTipoDatoErroneo Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Esperamos un error 400 por Bad request\", function(){\r",
									"    pm.response.to.have.status(400);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/product/save",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"product",
								"save"
							]
						}
					},
					"response": []
				},
				{
					"name": "MostrarProductos",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonResponse = pm.response.json();\r",
									"pm.test(\"Esperamos un array de objetos\", function(){\r",
									"    pm.expect(jsonResponse).to.be.an(\"array\");\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/product/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"product",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "MostrarProductoID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let schema = {\r",
									"    \"id\":\"Long\",\r",
									"    \"name\":\"string\",\r",
									"    \"description\":\"string\",\r",
									"    \"imgUrl\":\"string\"\r",
									"}\r",
									"\r",
									"\r",
									"let schema2 = {\r",
									"    \"id\": String,\r",
									"    \"name\": true,\r",
									"    \"description\": \"string\",\r",
									"    \"imgUrl\":String\r",
									"}\r",
									"\r",
									"\r",
									"pm.test('Schema is valid #1', function() {\r",
									"  pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test('Schema is valid #2', function() {\r",
									"  pm.response.to.have.jsonSchema(schema2);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:8080/product/id/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"product",
								"id",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "MostrarProductoNoExistenteID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Esperamos un error 404\", function(){\r",
									"    pm.response.to.have.status(404);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/product/id/100",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"product",
								"id",
								"100"
							]
						}
					},
					"response": []
				},
				{
					"name": "MostrarProductoName",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Esperamos un status 200\", function(){\r",
									"    pm.response.to.have.status(200);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:8080/category/product/Porsche GT3R",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"category",
								"product",
								"Porsche GT3R"
							]
						}
					},
					"response": []
				},
				{
					"name": "MostrarProductoNoExistenteName",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Esperamos error 404\", function(){\r",
									"    pm.response.to.have.status(404);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:8080/category/product/BMW S100 RR",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"category",
								"product",
								"BMW S100 RR"
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdateProducto",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Esperando un status 200\", function(){\r",
									"    pm.response.to.have.status(200);\r",
									"})\r",
									"\r",
									"let jsonResponse = pm.response.json();\r",
									"pm.test(\"Esperamos un objeto\", function(){\r",
									"    pm.expect(jsonResponse).to.be.an(\"object\");\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/image/update",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"image",
								"update"
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdateProductoBadRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Esperando un status 400\", function(){\r",
									"    pm.response.to.have.status(400);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/image/update",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"image",
								"update"
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdateProductoWithOutID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Esperando un status 400\", function(){\r",
									"    pm.response.to.have.status(400);\r",
									"})\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/image/update",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"image",
								"update"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteProductoExistente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Esperando un status 200\", function(){\r",
									"    pm.response.to.have.status(200);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/product/delete/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"product",
								"delete",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteProductoNoExistente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Esperando un status 404\", function(){\r",
									"    pm.response.to.have.status(404);\r",
									"})\r",
									"\r",
									"pm.test(\"Esperando un status 400\", function(){\r",
									"    pm.response.to.have.status(400);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/category/delete/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"category",
								"delete",
								"1"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}